name: Scheduled Job wihin range Upper-Lower

on:
  schedule:
    - cron: '* * * * *'  # Runs every minute
  workflow_dispatch:      # Allows manual trigger

env:
  LOWER_LIMIT: "00 23 * * *"
  UPPER_LIMIT: "30 23 * * *"

jobs:
  conditional-job:
    runs-on: ubuntu-latest
    steps:
      - name: Check if current time is within bounds
        id: check_time
        run: |
          # Extract hour and minute from cron expressions
          lower_minute=$(echo "${{ env.LOWER_LIMIT }}" | awk '{print $1}')
          lower_hour=$(echo "${{ env.LOWER_LIMIT }}" | awk '{print $2}')
          upper_minute=$(echo "${{ env.UPPER_LIMIT }}" | awk '{print $1}')
          upper_hour=$(echo "${{ env.UPPER_LIMIT }}" | awk '{print $2}')

          # Convert to minutes since midnight
          lower_total=$((10#$lower_hour * 60 + 10#$lower_minute))
          upper_total=$((10#$upper_hour * 60 + 10#$upper_minute))

          # Get current UTC time in minutes since midnight
          current_hour=$(date -u +"%H")
          current_minute=$(date -u +"%M")
          current_total=$((10#$current_hour * 60 + 10#$current_minute))

          echo "Current time: $current_hour:$current_minute UTC"
          echo "Lower bound: $lower_hour:$lower_minute"
          echo "Upper bound: $upper_hour:$upper_minute"

          if [ "$current_total" -ge "$lower_total" ] && [ "$current_total" -le "$upper_total" ]; then
            echo "Run=1" >> $GITHUB_OUTPUT
          else
            echo "Run=0" >> $GITHUB_OUTPUT
          fi

      - name: Run the job
        if: steps.check_time.outputs.Run == '1'
        run: echo "âœ… Running job within time bounds!"
